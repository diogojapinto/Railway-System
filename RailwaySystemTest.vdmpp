class RailwaySystemTest
	instance variables
		railWay : Railway := new Railway();
		b1 : TrackElement := new Block();
		b2 : TrackElement := new Block();
		b3 : TrackElement := new Block();
		b4 : TrackElement := new Block();
		s1 : TrackElement := new Station();
		s2 : TrackElement := new Station();
		
	operations
		private assertTrue: bool ==> ()
    	assertTrue(cond) == return
    	pre cond;
    	
		private assertFalse: bool ==> ()
    	assertFalse(cond) == return
    	pre not cond;
    
    protected assertEqual: ? * ? ==> ()
  	assertEqual(expected, actual) == 
  	if expected <> actual then (
  		IO`print("Actual value (");
  		IO`print(actual); 
  		IO`print(") different from expected (");
  		IO`print(expected);
  		IO`println(")\n")
  	)
  post expected = actual;
    	
    private testValidRailway: () ==> ()
    testValidRailway() ==
    (
    	dcl tracks: seq of TrackElement;
    	railWay.appendTrackElement(b1);
    	railWay.appendTrackElement(s1);
    	railWay.appendTrackElement(b4);
    	railWay.appendTrackElement(s2);
    	tracks := railWay.closeTrack();
    	assertTrue(len railWay.trackElements = 4);
    	assertTrue(tracks = [b1, s1, b4, s2]);
    );
    
    public static main: () ==> ()
    main() ==
    (
      dcl tester: RailwaySystemTest := new RailwaySystemTest();
      tester.testValidRailway();
    );
    
end RailwaySystemTest